name: Release App

on:
  push:
    branches:
      - main
permissions:
  contents: write # Needed for creating releases
  packages: read  # Needed for package dependencies

jobs:
  build-and-release:
    runs-on: macos-latest # Using macOS runner for macOS build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for proper versioning
        
      - name: Verify Token
        run: |
          if [ -z "${{ secrets.GTH_TKN }}" ]; then
            echo "Error: GITHUB_TOKEN is not set"
            echo "Please follow these steps to set up the token:"
            echo "1. Go to GitHub.com → Settings → Developer settings → Personal access tokens"
            echo "2. Generate a new token with 'repo' and 'workflow' permissions"
            echo "3. Add the token to your repository's secrets as GITHUB_TOKEN"
            exit 1
          fi
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.0'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
        
      - name: Build macOS app
        run: |
          flutter config --enable-macos-desktop
          flutter build macos --release
          
      - name: Prepare DMG creation
        run: |
          brew install create-dmg
          APP_PATH="build/macos/Build/Products/Release/flutter_android_file_transfer.app"
          DMG_PATH="flutter_android_file_transfer.dmg"
          TEMP_PATH="$(mktemp -d)/Flutter Android File Transfer"
          
          # Create temporary directory and copy app
          mkdir -p "$TEMP_PATH"
          cp -r "$APP_PATH" "$TEMP_PATH/"
          
          # Create DMG from temporary directory
          create-dmg \
            --volname "Flutter Android File Transfer" \
            --volicon "assets/AppIcon.icns" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "flutter_android_file_transfer.app" 200 190 \
            --hide-extension "flutter_android_file_transfer.app" \
            --app-drop-link 600 185 \
            "$DMG_PATH" \
            "$TEMP_PATH" || exit 1
          
          # Verify DMG was created
          if [ ! -f "$DMG_PATH" ]; then
            echo "Error: DMG file was not created"
            exit 1
          fi
          
          echo "DMG created successfully at $DMG_PATH"

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GTH_TKN }}
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false
          files: |
            flutter_android_file_transfer.dmg
          body: |
            ## Flutter Android File Transfer for macOS ${{ env.VERSION }}
            
            A modern, user-friendly alternative to Android File Transfer for macOS users, built with Flutter.
            
            ### Installation
            1. Download the DMG file
            2. Open the DMG file
            3. Drag the app to your Applications folder
            4. Launch the app from Applications
            
            ### Requirements
            - macOS 10.15 or later
            - Android device with USB debugging enabled
            
            ### Changes in this version
            - Please check the commit history for detailed changes
            
            ### Note
            This is an open-source project for educational purposes. Feel free to contribute!

      - name: Verify Release
        run: |
          echo "✅ Release ${{ env.VERSION }} created successfully"
          echo "You can find the release at:"
          echo "https://github.com/${{ github.repository }}/releases/tag/${{ env.VERSION }}" 